# -*- coding: utf-8 -*-
"""Product Recommendation Engine .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yTo20NBnv501btpxOk6rBZcSuR0KuR1J

#Product Recommendation Engine (E-commerce)
1. Scenario:
You have product descriptions and customer queries.
2.  Task:
Embed all product descriptions using Sentence Transformers. When a user searches “comfortable running shoes,” find the top 5 most semantically similar products using cosine similarity.
"""

from sentence_transformers import SentenceTransformer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np

model = SentenceTransformer("sentence-transformers/all-MiniLM-L6-v2")

product_description =[
    "Lightweight running shoes with breathable mesh",
    "Comfortable walking shoes with memory foam sole",
    "Trail running shoes with extra grip and ankle support",
    "Formal leather shoes for office wear",
    "Casual sneakers for daily comfort",
    "High-performance basketball shoes with strong traction",
    "Comfort sandals with arch support for long walks",
    "Waterproof hiking boots with rugged soles",
    "Slip-on shoes for quick and easy wear",
    "Soft running shoes designed for marathon runners"
]
query = "comfortable running shoe"

embeded_query = model.encode(query).reshape(1,-1)
embeded_description = model.encode(product_description)

similarity_search = cosine_similarity(embeded_query , embeded_description)[0]

top_score = np.argsort(-similarity_search)
print("the top five recommended search for your querrry is ")

for rank,indx in enumerate(top_score[:5]):
  print(f"{rank+1} {product_description[indx]} {top_score[indx]:.2f}")

