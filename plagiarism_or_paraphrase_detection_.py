# -*- coding: utf-8 -*-
"""Plagiarism or Paraphrase Detection .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c-bQKjtzVT1zRHh1zomBSyG2v0cBtDkM

#Plagiarism or Paraphrase Detection
1.  Scenario:You need to detect when two essays or news reports have similar meaning but different wording.
2. Task: Use Sentence-BERT embeddings to calculate similarity between documents and flag pairs above a similarity threshold.
"""

from sklearn.metrics.pairwise import cosine_similarity
from sentence_transformers import SentenceTransformer

essay_1 = "Artificial Intelligence is transforming industries by automating tasks and improving decision-making."
essay_2 = "Automation and smart algorithms are changing how businesses operate, enhancing efficiency and data-driven decisions."

model = SentenceTransformer("sentence-transformers/all-MiniLM-L6-v2")

embedded1 = model.encode(essay_1).reshape(1,-1)
embedded2 = model.encode(essay_2).reshape(1,-1)

similarity_score = cosine_similarity(embedded1, embedded2)[0][0]
thresehold = 0.7

if(similarity_score>=thresehold):
  print("the pharaphase detected")
else:
  print(f"the content is original")